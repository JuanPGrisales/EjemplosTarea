import random

class oficina:
    def __init__(self,_numeroPuestos,_tieneVentana=False):
        self.numeroPuestos = _numeroPuestos
        self.tieneVentana = _tieneVentana
        self.esEspacioAbierto = True
        self.puestosPremium = 0
        self.propietario = None
    def calcularCosto(self):
        _costo = 0
        if (self.tieneVentana):
            _costo += 1000000
        _costo += self.numeroPuestos * 600000
        if(self.esEspacioAbierto):
            _costo -= 1000000
        _costo += (self.puestosPremium * 200000)        
        return _costo

class cowork:
    def __init__(self):
        self.listaOficinas = []


    def listarEmpresas(self):
        _listaEmpresas = []
        for oficina in self.listaOficinas:
            if(oficina.propietario != None):
                _listaEmpresas.append(oficina.propietario)
        return _listaEmpresas

    def calcularCosto(self):
        _cantidadPuestosTrabajo = 0
        for oficina in self.listaOficinas:
            _cantidadPuestosTrabajo += oficina.numeroPuestos
        _costo = (_cantidadPuestosTrabajo * 500000) + 10000000
        return _costo

    def agregarOficina(self, _numeroPuestos, _tieneVentana = False):
        self.listaOficinas.append(oficina(_numeroPuestos, _tieneVentana))

    def getCostoOficina(self, _idOficina):
        _costo = 0
        _oficina = self.listaOficinas[_idOficina]
        if (_oficina.tieneVentana):
            _costo += 1000000
        _costo += _oficina.numeroPuestos * 600000
        if(_oficina.esEspacioAbierto):
            _costo -= 1000000
        _costo += (_oficina.puestosPremium * 200000)        
        return _costo

    def getIdOficinaDisponible(self, _empresa):
        _id = -1
        for oficina in self.listaOficinas:
            if(oficina.propietario == None):
                if(oficina.numeroPuestos == _empresa.numeroEmpleados):
                    if(_empresa.capital >= oficina.calcularCosto()):
                        _id = self.listaOficinas.index(oficina)
                        break
        return _id

    def calcularIngresos(self):
        _ingresos = 0
        for oficina in self.listaOficinas:
            if(oficina.propietario != None):
                _ingresos += oficina.calcularCosto()
        return _ingresos

    def calcularGanancias(self):
        return self.calcularIngresos() - self.calcularCosto()

    def calcularPuestosPotenciales(self):
        puestosTotales = 0
        puestosOcupados = 0
        for oficina in self.listaOficinas:
            puestosTotales += oficina.numeroPuestos
            if(oficina.propietario != None):
                puestosOcupados += oficina.numeroPuestos
        return "{0}/{1}".format(puestosOcupados,puestosTotales)

    def asignarPropietarioOficina(self,_empresa,_idOficina):
        self.listaOficinas[_idOficina].propietario = _empresa
        _empresa.oficina = self.listaOficinas[_idOficina]
        




def reportarCowork(cowork):
    for empresa in cowork.listarEmpresas():
        print(empresa.nombre)
        print("Costo: ",empresa.calcularCosto())
        print("Renta: ",empresa.calcularRenta())
    print("----COSTOS TOTALES---")
    print("Costo: ", cowork.calcularCosto())
    print("Ingresos: ", cowork.calcularIngresos())
    print("Ganancias: ", cowork.calcularGanancias())
    print("Puestos Potenciales: ", cowork.calcularPuestosPotenciales())



class empresa:
    def __init__(self, _nombre):
        self.nombre = _nombre
        self.numeroEmpleados = 0
        self.oficina = None
    def calcularCosto(self):
        return self.numeroEmpleados * 500000
    def calcularRenta(self):
        _renta = 0
        _oficina = self.oficina
        if (_oficina.tieneVentana):
            _renta += 1000000
        _renta += _oficina.numeroPuestos * 600000
        if(_oficina.esEspacioAbierto):
            _renta -= 500000
        _renta += (_oficina.puestosPremium * 200000)  
        return _renta



#comienzo

# Crear el Cowork
coworkEspecial = cowork()

# Agregar Oficinas
coworkEspecial.agregarOficina(2, True)
coworkEspecial.agregarOficina(2)
coworkEspecial.agregarOficina(2)
coworkEspecial.agregarOficina(5)
for i in range(3):
    coworkEspecial.agregarOficina(6)
for i in range(3):
    coworkEspecial.agregarOficina(6, True)
coworkEspecial.agregarOficina(8)
coworkEspecial.agregarOficina(8)




# Agregar las empresas
for i in range(20):
    _nuevaEmpresa = empresa("Empresa"+str(i))
    _nuevaEmpresa.capital = random.randint(1000000,100000000)
    _nuevaEmpresa.numeroEmpleados = random.randint(3,10)
    _idOficina = coworkEspecial.getIdOficinaDisponible(_nuevaEmpresa)
    _costoOficina = coworkEspecial.getCostoOficina(_idOficina)
    _puedeEmpresaPagar = _costoOficina < _nuevaEmpresa.capital
    _hayDisponibilidad = _idOficina != -1
    if(_hayDisponibilidad & _puedeEmpresaPagar):
        coworkEspecial.asignarPropietarioOficina(_nuevaEmpresa,_idOficina)



# Imprimir el resultado
reportarCowork(coworkEspecial)

#fin